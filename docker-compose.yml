services:

  postgres:
    image: postgres:latest
    container_name: uao-postgres
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    restart: always

  uao-app:
    container_name: uao-app
    build: .
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 4
    volumes:
      - ./:/app
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - postgres

  nginx:
    image: nginx:latest
    container_name: uao-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/start-nginx.sh:/start-nginx.sh
      - ./nginx/nginx-http.conf:/nginx-http.conf
      - ./nginx/nginx-https.conf:/nginx-https.conf
      - ./nginx/ssl:/etc/letsencrypt
      - ./nginx/ssl:/var/www/certbot
    command: [ "sh", "/start-nginx.sh" ]
    depends_on:
      - uao-app

  certbot:
    image: certbot/certbot
    container_name: certbot
    env_file:
      - .env
    depends_on:
      - nginx
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
      - ./nginx/ssl:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${DEFAULT_FROM_EMAIL} --agree-tos --no-eff-email -d ${BACKEND_URL} --non-interactive

volumes:
  postgres_data:
    driver: local
